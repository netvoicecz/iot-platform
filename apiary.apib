FORMAT: 1A
HOST: https://internetthings.cz/api/

# IoT Platform

API projektu IoT Platform.


# Group Users

Uživatelé systému, ať už jde o koncové uživatele nebo administrátory.

## User collection [/users]

### List users [GET]
+ Response 200 (application/json)

        [
            {
                "id": 12,
                "firstName": "Jan",
                "lastName": "Novák",
                "email": "jan.novak@email.cz",
                "phone": "777123456"
            },
            {
                "id": 16,
                "firstName": "František",
                "lastName": "Novotný",
                "email": "fnovotny@email.cz",
                "phone": "777000000"
            }
        ]

### Create user [POST]
+ Request (application/json)

        {
            "firstName": "Jan",
            "lastName": "Novák",
            "email": "jan.novak@email.cz",
            "phone": "777123456"
        }

+ Response 201

        {
            "id": 12,
            "firstName": "Jan",
            "lastName": "Novák",
            "email": "jan.novak@email.cz",
            "phone": "777123456"
        }

## User [/users/{id}]
+ Parameters
    + id: 12 (number) - id uživatele

### Retrieve user [GET]
+ Response 200 (application/json)

        {
            "id": 12,
            "firstName": "Jan",
            "lastName": "Novák",
            "email": "jan.novak@email.cz",
            "phone": "777123456"
        }

### Replace user [PUT]
+ Request (application/json)

        {
            "id": 12,
            "firstName": "Jan",
            "lastName": "Novák",
            "email": "jan.novak@email.com",
            "phone": "777123456"
        }
        
+ Response 200

        {
            "id": 12,
            "firstName": "Jan",
            "lastName": "Novák",
            "email": "jan.novak@email.com",
            "phone": "777123456"
        }


### Delete user [DELETE]
+ Response 204

## Me [/users/me]
### Retrieve me [GET]
* currentWorkplace - ID uživatelského prostoru, který má uživatel právě aktivní
* currentPermissions - práva v aktuální workplace (zkratka, aby se nemusela tahat zvlášť)

+ Response 200 (application/json)

        {
            "id": 12,
            "firstName": "Jan",
            "lastName": "Novák",
            "email": "jan.novak@email.cz",
            "phone": "777123456",
            "currentWorkplace": 7,
            "currentPermissions": [
                "READ_USERS",
                "WRITE_USERS"
            ]
        }

### Login user [POST /oauth/token]

+ Request (multipart/form-data; boundary=----WebKitFormBoundary)

        ------WebKitFormBoundary
        Content-Disposition: form-data; name="grant_type"
        
        password
        ------WebKitFormBoundary
        Content-Disposition: form-data; name="scope"
        
        trust
        ------WebKitFormBoundary
        Content-Disposition: form-data; name="username"
        
        admin@netvoice.cz
        ------WebKitFormBoundary
        Content-Disposition: form-data; name="password"
        
        123456
        ------WebKitFormBoundary--
    
+ Response 200 (application/json)

        {
            "access_token": "8e735586-04b7-46df-ab7a-d89918d99bcb",
            "token_type": "bearer",
            "refresh_token": "7483d27f-dddd-49b8-a396-302ec722e8c0",
            "expires_in": 43199,
            "scope": "trust"
        }
        


### Authorization test [GET /authorized-resource]
+ Response 401


# Group Companies

Company představuje firmu. Firma se člení na skupiny, které tvoří stromovou strukturu (např. skupina
"generální ředitelství" tvoří kořen stromu, pod ním jsou skupiny pro krajská ředitelství atd.).
`rootGroup` je odkaz na kořen firemního stromu. Jeho potomky je pak možné dohledat přes api pro Groups.
Company samotná není workplace, ale její skupiny ano.

## Company collection [/companies]
### List companies [GET]
+ Response 200 (application/json)

        [
            {
                "id": 27,
                "name": "Chytré krabičky, s.r.o.",
                "rootGroup": 2
            },
            {
                "id": 29,
                "name": "Ještě chytřejší krabičky, s.r.o.",
                "rootGroup": 4
            }
        ]

### Create company [POST]
Firmu vytváří přímo koncový uživatel (nikoli admin). Sám je automaticky přidán mezi členy firmy.
Spolu s company je automaticky vytvořen root jejích skupin.

+ Request (application/json)

        {
            "name": "Chytré krabičky, s.r.o."
        }

+ Response 201

        {
            "id": 27,
            "name": "Chytré krabičky, s.r.o.",
            "rootGroup": 2
        }


## Company [/companies/{id}]
+ Parameters
    + id: 27 (number) - id firmy

### Retrieve company [GET]
+ Response 200 (application/json)

        {
            "id": 27,
            "name": "Chytré krabičky, s.r.o.",
            "rootGroup": 2
        }

### Replace company [PUT]
+ Request (application/json)

        {
            "id": 27,
            "name": "Chytré krabice, s.r.o."
        }

+ Response 200

        {
            "id": 27,
            "name": "Chytré krabice, s.r.o.",
            "rootGroup": 2
        }

### Delete company [DELETE]
+ Response 204


# Group Groups

Stromová hierarchie skupin slouží k členění firmy na menší celky. Skupina obsahuje zařízení, uživatele apod.

## Group collection [/groups]
### List groups [GET]
Vrací všechny skupiny (ke kterým má uživatel přístup).

+ Response 200 (application/json)

        [
            {
                "id": 2,
                "name": "Ředitelství Hradec Králové",
                "parent": null,
                "workplace": 4
            },
            {
                "id": 8,
                "name": "KŘ Brno",
                "parent": 2,
                "workplace": 5
            },
            {
                "id": 18,
                "name": "LS Bučovice",
                "parent": 8,
                "workplace": 6
            },
            {
                "id": 19,
                "name": "LS Černá Hora",
                "parent": 8,
                "workplace": 7
            },
            {
                "id": 9,
                "name": "KŘ České Budějovice",
                "parent": 2,
                "workplace": 8
            },
            {
                "id": 20,
                "name": "LS Český Krumlov",
                "parent": 9,
                "workplace": 9
            },
            {
                "id": 21,
                "name": "LS Hluboká nad Vltavou",
                "parent": 9,
                "workplace": 10
            },
            {
                "id": 13,
                "name": "KŘ Choceň",
                "parent": 2,
                "workplace": 11
            },
            {
                "id": 17,
                "name": "LS Svitavy",
                "parent": 13,
                "workplace": 12
            }
        ]

### Create group [POST]
Kořenový uzel je vytvářen automaticky. Takto můžeme vytvořit další úrovně stromu. V nově vytvořené skupině jsem automaticky adminem.
Poté mohu admina předat někomu jinému.

+ Request (application/json)

        {
            "name": "LS Bučovice",
            "parent": 8
        }

+ Response 201

        {
            "id": 18,
            "name": "LS Bučovice",
            "parent": 8,
            "workplace": 6
        }

## Group [/groups/{id}]
+ Parameters
    + id: 12 (number) - id skupiny

### Retrieve group [GET]
+ Response 200

        {
            "id": 18,
            "name": "LS Bučkovice",
            "parent": 19,
            "workplace": 6
        }

### Replace group [PUT]
+ Request (application/json)

        {
            "id": 18,
            "name": "LS Bučkovice",
            "parent": 19
        }

+ Response 200

        {
            "id": 18,
            "name": "LS Bučkovice",
            "parent": 19,
            "workplace": 6
        }

### Delete group [DELETE]
+ Response 204


# Group Workplaces
Workplace je obecný pojem pro izolovaný prostor uživatelů. Workplace může představovat celý systém nebo jeho podmnožinu (skin,
firma, lokalita,...). Uživatel patří do jednoho nebo více workplaces, v každém má přiřazené (ne nutně stejné) role. Workplace
s ID = 1 představuje celý systém. Workplaces nevytváříme ručně, ale jsou vytvořeny automaticky spolu s entitou, ke které patří
(systém, skin, firma, lokalita,...)

Důvod, proč zavádíme navíc tuto entitu je ten, že bez ní bychom museli správu uživatelů, rolí apod. implementovat pro systém, skin,
skupinu aj. zvlášť. Díky workplace to ale implementujeme jen jednou.

## Workplace [/workplace/{id}]
Obsahuje práva, která maximálně mohou mít jeho členové.

+ Parameters
    + id: 7 (number) - ID uživatelského prostoru

### Retrieve workplace [GET]
+ Response 200 (application/json)

        {
            "id": 7,
            "permissions": [
                "READ_USERS",
                "WRITE_USERS"
            ]
        }


# Group Roles
Role uživatele definuje oprávnění, která uživatel má. Role nejsou globální pro celý systém, ale každý workplace má svoji sadu rolí (které vytvářejí jeho správci).

TODO u stromu skupin by asi bylo vhodné role sdílet.

* `workplace` - ID uživatelského prostoru, ve kterém je role definovaná.

## Role collection [/roles]

### List roles [GET]
+ Response 200 (application/json)

        [
            {
                "id": 1,
                "workplace": 1,
                "name": "superadmin",
                "permissions": [
                    "READ_USERS",
                    "WRITE_USERS",
                    "READ_ROLES",
                    "WRITE_ROLES",
                    "READ_DEVICES",
                    "WRITE_DEVICES"

                ]
            },
            {
                "id": 12,
                "workplace": 1,
                "name": "Správce",
                "permissions": [
                    "READ_USERS",
                    "WRITE_USERS"
                ]
            },
            {
                "id": 13,
                "workplace": 1,
                "name": "Účetní",
                "permissions": [
                    "READ_USERS"
                ]
            }
        ]

### Create role [POST]

+ Request (application/json)

        {
            "name": "Správce",
            "permissions": [
                "READ_USERS",
                "WRITE_USERS"
            ]
        }

+ Response 201

        {
            "id": 12,
            "workplace": 1,
            "name": "Správce",
            "permissions": [
                "READ_USERS",
                "WRITE_USERS"
            ]
        }

## Role [/roles/{id}]
+ Parameters

    + id: 27 (number) - ID role

### Retrieve role [GET]
+ Response 200 (application/json)

        {
            "id": 12,
            "workplace": 1,
            "name": "Správce",
            "permissions": [
                "READ_USERS",
                "WRITE_USERS"
            ]
        }

### Replace role [PUT]
+ Request (application/json)

        {
            "id": 12,
            "name": "Správce",
            "permissions": [
                "READ_USERS",
                "WRITE_USERS",
                "READ_ROLES"
            ]
        }

+ Response 200

        {
            "id": 12,
            "workplace": 1,
            "name": "Správce",
            "permissions": [
                "READ_USERS",
                "WRITE_USERS",
                "READ_ROLES"
            ]
        }

### Delete role [DELETE]
+ Response 204


# Group User memberships
Představuje přiřazení uživatele do workplace a nastavení příslušných rolí. Když chci uživatele přiřadit do workplace, vytvořím tento objekt, ve kterém řeknu:

* `user` - kterého uživatele přiřazuji
* `workplace` (read only) - do kterého workplace (při zápisu se vždy použije aktuální workplace)
* `admin` - jestli je uživatel administrátorem daného workplace (potom má automaticky všechna práva, která jsou definována ve workplace), každý workplace musí mít minimálně jednoho admina
* `roles` - jaké role uživatel ve workplace bude mít (může jich být více)

## User membership collection [/memberships]

### List memberships [GET]
+ Response 200 (application/json)

        [
            {
                "id": 145,
                "user": 1,
                "workplace": 1,
                "admin": true,
                "roles": []
            },
            {
                "id": 163,
                "user": 12,
                "workplace": 1,
                "admin": false,
                "roles": [12, 13]
            }
        ]

### Create membership [POST]
+ Request (application/json)

        {
            "user": 12,
            "admin": false,
            "roles": [12, 13]
        }

+ Response 204

## User membership [/memberships/{id}]
+ Parameters
    + id: 12 (number) - ID členství v uživatelském prostoru

### Retrieve membership [GET]
+ Response 200 (application/json)

        {
            "id": 12,
            "user": 6,
            "admin": false,
            "roles": [12, 13]
        }

### Replace membership [PUT]
+ Request (application/json)

        {
            "id": 12,
            "user": 6,
            "admin": false,
            "roles": [13]
        }
        
+ Response 200

        {
            "id": 12,
            "user": 12,
            "admin": false,
            "roles": [13]
        }

### Delete membership [DELETE]
+ Response 204


# Group Device types

Typ zařízení předepisuje společné vlastnosti zařízení.

## Device type collection [/device-types]

### List types [GET]
+ Response 200 (application/json)

        [
            {
                "id": 442,
                "name": "Lapač kůrovce",
                "sensors": [
                    {
                        "id": 224,
                        "name": "Hmotnost brouků",
                        "valueType": "NUMBER",
                        "unit": "g",
                        "alert": {
                            "direction": "LESS_IS_BETTER",
                            "warning": 220,
                            "critical": 280
                        }
                    },
                    {
                        "id": 196,
                        "name": "Stav baterie",
                        "valueType": "NUMBER",
                        "unit": "%",
                        "alert": {
                            "direction": "MORE_IS_BETTER",
                            "warning": 20,
                            "critical": 10
                        }
                    }
                ]
            },
            {
                "id": 621,
                "name": "Teploměr",
                "sensors": [
                    {
                        "id": 215,
                        "name": "Teplota",
                        "valueType": "NUMBER",
                        "unit": "°C",
                        "alert": {
                            "direction": "LESS_IS_BETTER",
                            "warning": 50,
                            "critical": 65
                        }
                    }
                ]
            }
        ]

### Create type [POST]
+ Request (application/json)

        {
            "name": "Lapač kůrovce",
            "sensors": [
                {
                    "name": "Hmotnost brouků",
                    "valueType": "NUMBER",
                    "unit": "g",
                    "alert": {
                        "direction": "LESS_IS_BETTER",
                        "warning": 220,
                        "critical": 280
                    }
                },
                {
                    "name": "Stav baterie",
                    "valueType": "NUMBER",
                    "unit": "%",
                    "alert": {
                        "direction": "MORE_IS_BETTER",
                        "warning": 20,
                        "critical": 10
                    }
                }
            ]
        }

+ Response 201

        {
            "id": 442,
            "name": "Lapač kůrovce",
            "sensors": [
                {
                    "id": 224,
                    "name": "Hmotnost brouků",
                    "valueType": "NUMBER",
                    "unit": "g",
                    "alert": {
                        "direction": "LESS_IS_BETTER",
                        "warning": 220,
                        "critical": 280
                    }
                },
                {
                    "id": 196,
                    "name": "Stav baterie",
                    "valueType": "NUMBER",
                    "unit": "%",
                    "alert": {
                        "direction": "MORE_IS_BETTER",
                        "warning": 20,
                        "critical": 10
                    }
                }
            ]
        }

## Device type [/device-types/{id}]
+ Parameters
    + id: 442 (number) - id typu

### Retrieve type [GET]
+ Response 200 (application/json)

        {
            "id": 442,
            "name": "Lapač kůrovce",
            "sensors": [
                {
                    "id": 224,
                    "name": "Hmotnost brouků",
                    "valueType": "NUMBER",
                    "unit": "g",
                    "alert": {
                        "direction": "LESS_IS_BETTER",
                        "warning": 220,
                        "critical": 280
                    }
                },
                {
                    "id": 196,
                    "name": "Stav baterie",
                    "valueType": "NUMBER",
                    "unit": "%",
                    "alert": {
                        "direction": "MORE_IS_BETTER",
                        "warning": 20,
                        "critical": 10
                    }
                }
            ]
        }

### Replace type [PUT]
+ Request (application/json)

        {
            "id": 442,
            "name": "Lapač kůrovce",
            "sensors": [
                {
                    "id": 224,
                    "name": "Hmotnost obsahu",
                    "valueType": "NUMBER",
                    "unit": "g",
                    "alert": {
                        "direction": "LESS_IS_BETTER",
                        "warning": 210,
                        "critical": 250
                    }
                },
                {
                    "id": 196,
                    "name": "Stav baterie",
                    "valueType": "NUMBER",
                    "unit": "%",
                    "alert": {
                        "direction": "MORE_IS_BETTER",
                        "warning": 20,
                        "critical": 10
                    }
                }
            ]
        }
        
+ Response 200

        {
            "id": 442,
            "name": "Lapač kůrovce",
            "sensors": [
                {
                    "id": 224,
                    "name": "Hmotnost obsahu",
                    "valueType": "NUMBER",
                    "unit": "g",
                    "alert": {
                        "direction": "LESS_IS_BETTER",
                        "warning": 210,
                        "critical": 250
                    }
                },
                {
                    "id": 196,
                    "name": "Stav baterie",
                    "valueType": "NUMBER",
                    "unit": "%",
                    "alert": {
                        "direction": "MORE_IS_BETTER",
                        "warning": 20,
                        "critical": 10
                    }
                }
            ]
        }

### Delete type [DELETE]
+ Response 204

### Create devices [POST /device-types/{id}/create-devices]

Hromadně vytvoří daný počet zařízení tohoto typu

+ Request (application/json)

        {
            "quantity": 2,
            "group": 18
        }

+ Response 204


# Group Devices

Zařízení (věci v pojetí Internet of Things). Typické zařízení má svoji polohu, baterii a připojení k internetu. Každé zařízení spadá do právě jedné skupiny (Group).

## Device collection [/devices]

### List devices [GET /devices{?group}]
+ Parameters
    + `group`: 2 (optional, number) - umožňuje filtrovat zažízení podle ID skupiny. Vrací zařízení z dané skupiny a rekurzivně všech jejích podskupin. (TODO mohl by se hodit druhý parametr, který povolí/zakáže rekurzivní vyhledávání)
    
+ Response 200 (application/json)

        [
            {
                "id": 504,
                "group": 18,
                "type": 442,
                "typeName": "Lapač kůrovce",
                "externalId": "NSM4577",
                "state": "ACTIVE",
                "geolocation": {
                    "lat": 49.200154,
                    "lng": 16.601425
                },
                "sensors": [
                    {
                        "id": 32,
                        "type": 224,
                        "typeName": "Hmotnost brouků",
                        "name": "Hmotnost brouků",
                        "value": 263
                    },
                    {
                        "id": 45,
                        "type": 196,
                        "typeName": "Stav baterie",
                        "name": "Stav baterie",
                        "value": 74
                    }                
                ]
            },
            {
                "id": 601,
                "group": 18,
                "type": 442,
                "typeName": "Lapač kůrovce",
                "externalId": "NSM4588",
                "state": "INACTIVE",
                "geolocation": {
                    "lat": 49.202174,
                    "lng": 16.602245
                },
                "sensors": [
                    {
                        "id": 34,
                        "type": 224,
                        "typeName": "Hmotnost brouků",
                        "name": "Hmotnost brouků",
                        "value": 121
                    },
                    {
                        "id": 45,
                        "type": 196,
                        "typeName": "Stav baterie",
                        "name": "Stav baterie",
                        "value": 66
                    }                
                ]
            }
        ]

## Device [/devices/{id}]
+ Parameters
    + id: 504 (number) - ID zařízení

### Retrieve device [GET]
+ Response 200 (application/json)

        {
            "id": 504,
            "group": 18,
            "type": 442,
            "typeName": "Lapač kůrovce",
            "externalId": "NSM4577",
            "state": "ACTIVE",
            "geolocation": {
                "lat": 49.200154,
                "lng": 16.601425
            },
            "sensors": [
                {
                    "id": 32,
                    "type": 224,
                    "typeName": "Hmotnost brouků",
                    "name": "Hmotnost brouků",
                    "value": 263
                },
                {
                    "id": 45,
                    "type": 196,
                    "typeName": "Stav baterie",
                    "name": "Stav baterie",
                    "value": 74
                }                
            ]
        }

### Replace device [PUT]
+ Request (application/json)

        {
            "id": 504,
            "group": 18,
            "externalId": "NSM4576",
            "state": "ACTIVE",
            "geolocation": {
                "lat": 49.200158,
                "lng": 17.601424
            }
        }

+ Response 200

        {
            "id": 504,
            "group": 18,
            "type": 442,
            "typeName": "Lapač kůrovce",
            "externalId": "NSM4576",
            "state": "ACTIVE",
            "geolocation": {
                "lat": 49.200158,
                "lng": 16.601424
            },
            "sensors": [
                {
                    "id": 32,
                    "type": 224,
                    "typeName": "Hmotnost brouků",
                    "name": "Hmotnost brouků",
                    "value": 263
                },
                {
                    "id": 45,
                    "type": 196,
                    "typeName": "Stav baterie",
                    "name": "Stav baterie",
                    "value": 74
                }                
            ]
        }
        
### Delete device [DELETE]
+ Response 204


# Group Device state events

Události o stavu senzorů odesílané ze zařízení.

## Device state event collection [/devices/state-events]

### List device state events  [GET /devices/state-events{?device_type,device}]
+ Parameters
    + `device_type` (optional, number) - ID typu zařízení, zajímají nás pouze události ze zařízení daného typu.
    + `device` (optional, number) - ID zařízení, zajímají nás pouze události z konkrétního zařízení.
    
+ Response 200 (application/json)

        [
            {
                "id": 63,
                "device": 442,
                "date": "2017-09-27T11:12:25.284+02:00",
                "sensors": [
                    {
                        "id": 45,
                        "name": "Stav baterie",
                        "value": 90
                    }
                ]
            },
            {
                "id": 65,
                "device": 442,
                "date": "2017-09-27T11:12:35.124+02:00",
                "sensors": [
                    {
                        "id": 32,
                        "name": "Hmotnost brouků",
                        "value": 52
                    },
                    {
                        "id": 45,
                        "name": "Stav baterie",
                        "value": 89
                    }
                ]
            },
            {
                "id": 70,
                "device": 621,
                "date": "2017-09-27T11:12:44.954+02:00",
                "sensors": [
                    {
                        "id": 61,
                        "name": "Teplota",
                        "value": 55
                    }
                ]
            }
        ]

## Device state event [/devices/state-events/{id}]
+ Parameters
    + id: 70 (number) - id události

### Retrieve device state event [GET]
+ Response 200 (application/json)

        {
            "id": 70,
            "device": 621,
            "date": "2017-09-27T11:12:44.954+02:00",
            "sensors": [
                {
                    "id": 61,
                    "name": "Teplota",
                    "value": 55
                }
            ]
        }


# Group Sensor history

## Sensor history [/sensors/{id}/history]
+ Parameters
    + `id`: 45 (number) - ID senzoru

### Retrieve sensor history [GET]
+ Response 200 (application/json)

        {
            "sensorId": 45,
            "sensorName": "Stav baterie",
            "unit": "%",
            "data": [
                {
                    "date": "2017-09-27T11:12:28.000+02:00",
                    "value": 90
                },
                {
                    "date": "2017-09-27T11:12:38.000+02:00",
                    "value": 89
                },
                {
                    "date": "2017-09-27T11:12:48.000+02:00",
                    "value": 87
                },
                {
                    "date": "2017-09-27T11:12:58.000+02:00",
                    "value": 84
                }
            ]
        }


# Group Reports

## Report collection [/report]

### List reports [GET]
+ Response 200 (application/json)

        [
            {
                "id": 2,
                "name": "Zvýšený výskyt kůrovce",
                "deviceType": 442,
                "conditions": [
                    {
                        "sensorType": 224,
                        "name": "Hmotnost brouků",
                        "min": 120,
                        "max": 180
                    }
                ],
                "onEnter": {
                    "emails": [
                        "ondrej.michal@netvoice.cz",
                        "manager@netvoice.cz"
                    ],
                    "state": "WARNING"
                },
                "onExit": {
                    "emails": [
                        "manager@netvoice.cz"
                    ]
                }
            },
            {
                "id": 3,
                "name": "Extrémní výskyt kůrovce",
                "deviceType": 442,
                "conditions": [
                    {
                        "sensorType": 224,
                        "name": "Hmotnost brouků",
                        "min": 180
                    }
                ],
                "onEnter": {
                    "emails": ["ondrej.michal@netvoice.cz"],
                    "sms": ["+420721000000"],
                    "state": "CRITICAL"
                }
            },
            {
                "id": 6,
                "name": "Nutná kontrola lapače",
                "deviceType": 442,
                "conditions": [
                    {
                        "sensorType": 224,
                        "name": "Hmotnost brouků",
                        "min": 180
                    },
                    {
                        "sensorType": 196,
                        "name": "Stav baterie",
                        "max": 15
                    }
                ],
                "onEnter": {
                    "sms": ["+420721999999"]
                }
            }
        ]

### Create report [POST]
+ Request (application/json)

        {
            "name": "Zvýšený výskyt kůrovce",
            "deviceType": 442,
            "conditions": [
                {
                    "sensorType": 224,
                    "min": 120,
                    "max": 180
                }
            ],
            "onEnter": {
                "emails": [
                    "ondrej.michal@netvoice.cz",
                    "manager@netvoice.cz"
                ],
                "state": "WARNING"
            },
            "onExit": {
                "emails": [
                    "manager@netvoice.cz"
                ]
            }
        }

+ Response 201

        {
            "id": 2,
            "name": "Zvýšený výskyt kůrovce",
            "deviceType": 442,
            "conditions": [
                {
                    "sensorType": 224,
                    "name": "Hmotnost brouků",
                    "min": 120,
                    "max": 180
                }
            ],
            "onEnter": {
                "emails": [
                    "ondrej.michal@netvoice.cz",
                    "manager@netvoice.cz"
                ],
                "state": "WARNING"
            },
            "onExit": {
                "emails": [
                    "manager@netvoice.cz"
                ]
            }
        }

## Report [/reports/{id}]
+ Parameters
    + id: 2 (number) - ID reportu

### Retrieve report [GET]
+ Response 200 (application/json)

        {
            "id": 2,
            "name": "Zvýšený výskyt kůrovce",
            "deviceType": 442,
            "conditions": [
                {
                    "sensorType": 224,
                    "name": "Hmotnost brouků",
                    "min": 120,
                    "max": 180
                }
            ],
            "onEnter": {
                "emails": [
                    "ondrej.michal@netvoice.cz",
                    "manager@netvoice.cz"
                ],
                "state": "WARNING"
            },
            "onExit": {
                "emails": [
                    "manager@netvoice.cz"
                ]
            }
        }

### Replace report [PUT]
+ Request (application/json)

        {
            "id": 2,
            "name": "Zvýšený výskyt kůrovce",
            "deviceType": 442,
            "conditions": [
                {
                    "sensorType": 224,
                    "min": 120,
                    "max": 200
                }
            ],
            "onEnter": {
                "emails": [
                    "ondrej.michal@netvoice.cz"
                ],
                "state": "WARNING"
            },
            "onExit": {
                "emails": [
                    "ondrej.michal@netvoice.cz"
                ]
            }
        }
        
+ Response 200

        {
            "id": 2,
            "name": "Zvýšený výskyt kůrovce",
            "deviceType": 442,
            "conditions": [
                {
                    "sensorType": 224,
                    "name": "Hmotnost brouků",
                    "min": 120,
                    "max": 200
                }
            ],
            "onEnter": {
                "emails": [
                    "ondrej.michal@netvoice.cz"
                ],
                "state": "WARNING"
            },
            "onExit": {
                "emails": [
                    "ondrej.michal@netvoice.cz"
                ]
            }
        }

### Delete report [DELETE]
+ Response 204